// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(CLI)
  orders    Order[]
  cartItems CartItem[]
}

model Product {
  id          String      @id @default(cuid())
  sku         String      @unique
  name        String
  price       Float
  description String?
  stock       Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
  cartItems   CartItem[]
}

model Coupon {
  id              String   @id @default(cuid())
  code            String   @unique
  discountPercent Int
  validUntil      DateTime
  maxUses         Int?     
  usedCount       Int      @default(0)
  createdAt       DateTime @default(now())
  orders          Order[]
}

model Order {
  id        String      @id @default(cuid())
  code      String      @unique     
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  total     Float
  status    OrderStatus @default(PENDING)
  couponId  String?
  coupon    Coupon?     @relation(fields: [couponId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELLED
}

model CartItem {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int      @default(1)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([userId, productId])
}


enum Role {
  CLI
  T_III
  T_II
  T_I
}
